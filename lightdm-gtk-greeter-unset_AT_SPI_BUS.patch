diff -up lightdm-gtk-greeter-1.8.5/src/lightdm-gtk-greeter.c.unset_AT_SPI_BUS lightdm-gtk-greeter-1.8.5/src/lightdm-gtk-greeter.c
--- lightdm-gtk-greeter-1.8.5/src/lightdm-gtk-greeter.c.unset_AT_SPI_BUS	2015-05-20 12:09:07.532143633 -0500
+++ lightdm-gtk-greeter-1.8.5/src/lightdm-gtk-greeter.c	2015-05-20 12:10:28.280516551 -0500
@@ -369,7 +369,7 @@ reassign_menu_item_accel (GtkWidget *ite
 
 static void
 #ifdef START_INDICATOR_SERVICES
-init_indicators (GKeyFile* config, GPid* indicator_pid, GPid* spi_pid)
+init_indicators (GKeyFile* config, GPid* indicator_pid)
 #else
 init_indicators (GKeyFile* config)
 #endif
@@ -385,7 +385,6 @@ init_indicators (GKeyFile* config)
 
 #ifdef START_INDICATOR_SERVICES
     GError *error = NULL;
-    gchar *AT_SPI_CMD[] = {"/usr/lib/at-spi2-core/at-spi-bus-launcher", "--launch-immediately", NULL};
     gchar *INDICATORS_CMD[] = {"init", "--user", "--startup-event", "indicator-services-start", NULL};
 #endif
 
@@ -437,10 +436,6 @@ init_indicators (GKeyFile* config)
             greeter_set_env ("GVFS_DISABLE_FUSE", "1");
 
             #ifdef START_INDICATOR_SERVICES
-            if (!g_spawn_async (NULL, AT_SPI_CMD, NULL, G_SPAWN_SEARCH_PATH, NULL, NULL, spi_pid, &error))
-                g_warning ("Failed to run \"at-spi-bus-launcher\": %s", error->message);
-            g_clear_error (&error);
-
             if (!g_spawn_async (NULL, INDICATORS_CMD, NULL, G_SPAWN_SEARCH_PATH, NULL, NULL, indicator_pid, &error))
                 g_warning ("Failed to run \"indicator-services\": %s", error->message);
             g_clear_error (&error);
@@ -2258,8 +2253,9 @@ main (int argc, char **argv)
     Display* display;
 
     #ifdef START_INDICATOR_SERVICES
-    GPid indicator_pid = 0, spi_pid = 0;
+    GPid indicator_pid = 0;
     #endif
+    GPid spi_pid = 0;
 
     /* Prevent memory from being swapped out, as we are dealing with passwords */
     mlockall (MCL_CURRENT | MCL_FUTURE);
@@ -2267,6 +2263,9 @@ main (int argc, char **argv)
     /* Disable global menus */
     g_unsetenv ("UBUNTU_MENUPROXY");
 
+    /* Prevent starting at-spi bus by Gtk */
+    g_setenv ("NO_AT_BRIDGE", "1", TRUE);
+
     /* LP: #1024482 */
     g_setenv ("GDK_CORE_DEVICE_EVENTS", "1", TRUE);
 
@@ -2428,6 +2427,11 @@ main (int argc, char **argv)
     g_shell_parse_argv (value, &argp, &a11y_keyboard_command, NULL);
     g_free (value);
 
+    gchar *AT_SPI_CMD[] = {"/usr/lib/at-spi2-core/at-spi-bus-launcher", "--launch-immediately", NULL};
+    if (!g_spawn_async (NULL, AT_SPI_CMD, NULL, G_SPAWN_SEARCH_PATH, NULL, NULL, &spi_pid, &error))
+        g_warning ("Failed to run \"at-spi-bus-launcher\": %s", error->message);
+    g_clear_error (&error);
+
     builder = gtk_builder_new ();
     if (!gtk_builder_add_from_string (builder, lightdm_gtk_greeter_ui,
                                       lightdm_gtk_greeter_ui_length, &error))
@@ -2519,7 +2523,7 @@ main (int argc, char **argv)
     gtk_accel_map_add_entry ("<Login>/power/shutdown", GDK_KEY_F4, GDK_MOD1_MASK);
 
 #ifdef START_INDICATOR_SERVICES
-    init_indicators (config, &indicator_pid, &spi_pid);
+    init_indicators (config, &indicator_pid);
 #else
     init_indicators (config);
 #endif
@@ -2787,13 +2791,19 @@ main (int argc, char **argv)
 		kill (indicator_pid, SIGTERM);
 		waitpid (indicator_pid, NULL, 0);
     }
+#endif
+
+    if (a11y_kbd_pid)
+    {
+		kill (a11y_kbd_pid, SIGTERM);
+		waitpid (a11y_kbd_pid, NULL, 0);
+    }
 
     if (spi_pid)
     {
 		kill (spi_pid, SIGTERM);
 		waitpid (spi_pid, NULL, 0);
     }
-#endif
 
     if (background_pixbuf)
         g_object_unref (background_pixbuf);
